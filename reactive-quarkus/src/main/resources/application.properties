# =============================================================================
# CONFIGURACIÓN DE APLICACIÓN QUARKUS REACTIVE
# =============================================================================

# -----------------------------------------------------------------------------
# HTTP SERVER CONFIGURATION
# Configuración del servidor HTTP
# -----------------------------------------------------------------------------
# Puerto en el que se ejecuta la aplicación
quarkus.http.port=8080

# -----------------------------------------------------------------------------
# CORS CONFIGURATION
# Configuración de CORS (Cross-Origin Resource Sharing)
# -----------------------------------------------------------------------------
# CORS para desarrollo - permite conexiones desde frontend local
%dev.quarkus.http.cors=true
%dev.quarkus.http.cors.origins=http://localhost:4200,http://127.0.0.1:4200
%dev.quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with
%dev.quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS

# CORS para producción - dominio específico
%prod.quarkus.http.cors=true
%prod.quarkus.http.cors.origins=https://reactive-quarkus.com
%prod.quarkus.http.cors.headers=accept,authorization,content-type
%prod.quarkus.http.cors.methods=GET,POST,PUT,DELETE

# -----------------------------------------------------------------------------
# DATABASE CONFIGURATION
# Configuración de base de datos MySQL reactiva
# -----------------------------------------------------------------------------
# Tipo de base de datos
quarkus.datasource.db-kind=mysql
# Credenciales de conexión
quarkus.datasource.username=${MYSQL_USER:admin}
quarkus.datasource.password=${MYSQL_PASSWORD:admin}
# URL de conexión reactiva a MySQL
quarkus.datasource.reactive.url=${DATASOURCE_URL:mysql://localhost:3306/testdb}
# Tamaño máximo del pool de conexiones
quarkus.datasource.reactive.max-size=20
# Tiempo de espera antes de cerrar conexiones inactivas
quarkus.datasource.reactive.idle-timeout=PT10M

# -----------------------------------------------------------------------------
# HIBERNATE ORM CONFIGURATION
# Configuración de Hibernate para desarrollo
# -----------------------------------------------------------------------------
# Genera/actualiza el esquema de base de datos automáticamente
quarkus.hibernate-orm.database.generation=update
# Solo en desarrollo: muestra las consultas SQL en el log
%dev.quarkus.hibernate-orm.log.sql=true
# Solo en desarrollo: desactiva validación en modo dev
%dev.quarkus.hibernate-orm.validate-in-dev-mode=false

# -----------------------------------------------------------------------------
# LOGGING CONFIGURATION
# Configuración de logs de la aplicación
# -----------------------------------------------------------------------------
# Formato de logs en consola
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n

# Niveles de log por ambiente
%dev.quarkus.log.console.level=DEBUG
%prod.quarkus.log.console.level=INFO

# Configuración de logs en archivo
quarkus.log.file.enable=true
quarkus.log.file.path=${APP_PATH:.}/logs/app.log
quarkus.log.file.level=INFO

# Rotación de archivos de log
quarkus.log.file.rotation.max-file-size=10M
quarkus.log.file.rotation.max-backup-index=5

# Niveles de log en archivo por ambiente
%dev.quarkus.log.file.level=DEBUG
%test.quarkus.log.file.enable=false
%prod.quarkus.log.file.level=INFO

# -----------------------------------------------------------------------------
# HEALTH CHECK CONFIGURATION
# Configuración de health checks
# -----------------------------------------------------------------------------
# Ruta para los health checks de la aplicación
quarkus.smallrye-health.root-path=/health

# -----------------------------------------------------------------------------
# NATIVE BUILD CONFIGURATION
# Configuración para compilación nativa con GraalVM
# -----------------------------------------------------------------------------
# Construir imagen nativa usando contenedor
quarkus.native.container-build=true
# Imagen de construcción nativa con Mandrel JDK 21
quarkus.native.builder-image=quay.io/quarkus/ubi9-quarkus-mandrel-builder-image:jdk-21
# Runtime de contenedor para construcción nativa
quarkus.native.container-runtime=docker

# Para perfil Docker, no usar construcción en contenedor
%docker.quarkus.native.container-build=false

# Recursos a incluir en la imagen nativa
quarkus.native.resources.includes=config/**,static/**,templates/**,META-INF/resources/**

# Configuraciones de handlers y encoding para imagen nativa
quarkus.native.enable-http-url-handler=true
quarkus.native.enable-https-url-handler=true
quarkus.native.file-encoding=UTF-8

# Optimizaciones para imagen nativa
quarkus.native.add-all-charsets=false
quarkus.native.report-errors-at-runtime=false

# Debug para desarrollo con imagen nativa
%dev.quarkus.native.debug.enabled=true